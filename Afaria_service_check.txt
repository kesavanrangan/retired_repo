$processes = "XSAlertsServer","XSDataServer","XService","XSGSTask","XSInbox","XSISAPIServer","XSOTAStatusManager","XSOutboundServer","XSRedirector","XSSMSGatewayManager","XSTrans"

$services = "Afaria Client Service","Afaria Server"

$proc_count = $nul

$val_count = $nul

$rest_flag = $true

Function Restart_service ($serv)
{
    foreach($service in $services)
    {
        Stop-Service $service
        Start-Sleep -s 10
    }
    $serv1 = (Get-Service "Afaria Server").status
    $serv2 = (Get-Service "Afaria Client Service").status
    if ($serv1 -eq "Stopped" -AND $serv2 -eq "Stopped")
    {
        Write-Host "`nBoth the services are now down, starting them....."    
    }
    foreach($service in $services)
    {
        if(Start-Service $service -ErrorAction Continue)
        {
            Start-Sleep -s 5
            Write-Host "`nStarted the service - $service"
        }
        else
        {
            Write-Host "`nCould not Start the service - $service"
        }
    }
    if ((Get-Service "Afaria Server").status -eq "Running" -AND (Get-Service "Afaria Client Service").status -eq "Running")
    {
        Write-Host "The services are running."    
    }
    else
    {
        Write-Host "Services are not restarted"
    }
}

Function Final_check($serv)    
{
    $final_count = 0
    foreach($process in $processes)
    {
        if(Get-Process $process -ErrorAction SilentlyContinue)
        {
            #Write-Host "`n$process found, see below: "
            Get-Process $process | Out-NUll
            $final_count++
	    }
        else
        {
            Write-Host "`n$process not found."
            
        }
    }

    $serv1 = (Get-Service "Afaria Client Service").Status
    $serv2 = (Get-Service "Afaria Server").Status

    if($final_count -eq 11 -AND $serv1 -eq "Running" -AND $serv2 -eq "Running")
    {
        Write-Host "`nTo Confirm: All the services and processes are running as expected."
    }
    else
    {
        Write-Host "`nManual Action Needed immediately, services and processes aren't running as expected."
    }
}


foreach($process in $processes)
{
    if(Get-Process $process -ErrorAction SilentlyContinue)
    {
        Write-Host "`n$process found, see below: "
        Get-Process $process
	$val_count++
    }
    else
    {
        Write-Host "`n$process not found."
        $proc_count++
    }
}

foreach($service in $services)
{
    if((Get-Service $service).Status -eq "Running")
    {
        Write-Host "`n$service is running, No action taken!!!"
    }
    else
    {
    if((Get-Service $service).Status -eq "Stopped")
    {
	Write-Host "`nStarting the service - $service."
        if(Start-Service $service -ErrorAction Continue)
        {
    	    Write-Host "Restarted the service - $service"
	        $rest_flag = $false
        }
        else
        {
            Write-Host "`nUnable to start the service - $service"
            $rest_flag = $true
        }
       	
    }
    else
    {
	Write-Host "$service is not running or stopped, stopping it..."
        Stop-Service $service
        Start-Sleep -s 10
	    if(Start-Service $service -ErrorAction Continue)
        {
            Start-Sleep -s 5
    	    Write-Host "`nStarted back the service - $service"
	    $rest_flag = $false
        }
        else
        {
            Write-Host "`nUnable to start the service - $service"
            $rest_flag = $true
        }
      }}
}

if (!($rest_flag))
{
    Write-Host "`nThe service restart is completed, exiting the script as all the services and processes are supposed to be running."
    Final_check($serv)
    exit
}
else
{
if ($proc_count -gt 0)
{
    Write-Host "`nOnly $val_count related processes out of 11 are running, service restart is needed. Restarting the services . . .  "
    Restart_service ($serv)
}
else
{
    Write-Host "`nAll the $val_count Afaria related processes and Afaria related services are up and running fine."
}
}

Final_check($serv)
